'git log' - to show a list of recent commits

'git log -n [#]' - to show a list of # recent commits

'git log --graph --oneline [branch_1] [branch 2]' - prints log for both chosen branches

'git diff [ID ID]' - to compare a two versions of the code followed by commits IDs

'git diff' - with no IDs, compares version of files between
			working directory and staging area

'git diff --staged' - compares version of files between
						staging area and repository 

'git clone [address of repo]' - to clone a repository

'git config --global color.ui auto' - to get coloured diff output

'git checkout [ID]' - back temporarily to earlier commit to try it out

'git init' - initiate a new git repository in current working directory;
				(creates new hidden directory '.git')

'git status' - prints the status of git repository (from current directory)

'git add [file]' -  add file to staging area

'git checkout -b [new_branch_name]' - Simultaneously creates new branch and 
										set "HEAD" to work on it

'git merge [branch_1] [branch_2]' - merges branch_1 into branch_2

'git show [ID]' - shows the introduced changes in commit (followed by ID) in 
					comparision to parent commit
  
'git branch -d [branch_name]' - deletes the label of chosen branch 
								(usually after merging)
 
'git remote' - lists remotes repositories

'git remote add [remote_name] [remote_address]' - adds new repo named 
						[remote_name] at [remote_address] address (i.e. http)

'git push [remote_name] [branch_name]' - push branch [branch_name] 
								to the [remote_name] repo   

'git pull [remote_name] [branch_name]' - downloads the branch
 							[branch_name] and merge it with local branch

'git fetch [remote_name]' - fetching the remote repo without merging with  
 								local master branch

'git show-branch -a' -  shows branches

'git commit' - record changes to the repository
